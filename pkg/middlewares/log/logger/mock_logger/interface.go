// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/qdm12/dns/pkg/middlewares/log/logger (interfaces: Interface)

// Package mock_logger is a generated GoMock package.
package mock_logger

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// Error mocks base method.
func (m *MockInterface) Error(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Error", arg0)
}

// Error indicates an expected call of Error.
func (mr *MockInterfaceMockRecorder) Error(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Error", reflect.TypeOf((*MockInterface)(nil).Error), arg0)
}

// LogRequest mocks base method.
func (m *MockInterface) LogRequest(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "LogRequest", arg0)
}

// LogRequest indicates an expected call of LogRequest.
func (mr *MockInterfaceMockRecorder) LogRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LogRequest", reflect.TypeOf((*MockInterface)(nil).LogRequest), arg0)
}

// LogRequestResponse mocks base method.
func (m *MockInterface) LogRequestResponse(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "LogRequestResponse", arg0)
}

// LogRequestResponse indicates an expected call of LogRequestResponse.
func (mr *MockInterfaceMockRecorder) LogRequestResponse(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LogRequestResponse", reflect.TypeOf((*MockInterface)(nil).LogRequestResponse), arg0)
}

// LogResponse mocks base method.
func (m *MockInterface) LogResponse(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "LogResponse", arg0)
}

// LogResponse indicates an expected call of LogResponse.
func (mr *MockInterfaceMockRecorder) LogResponse(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LogResponse", reflect.TypeOf((*MockInterface)(nil).LogResponse), arg0)
}
