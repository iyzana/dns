// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/qdm12/dns/pkg/middlewares/log/format (interfaces: Interface)

// Package mock_format is a generated GoMock package.
package mock_format

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	dns "github.com/miekg/dns"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// Error mocks base method.
func (m *MockInterface) Error(arg0 uint16, arg1 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Error", arg0, arg1)
	ret0, _ := ret[0].(string)
	return ret0
}

// Error indicates an expected call of Error.
func (mr *MockInterfaceMockRecorder) Error(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Error", reflect.TypeOf((*MockInterface)(nil).Error), arg0, arg1)
}

// Request mocks base method.
func (m *MockInterface) Request(arg0 *dns.Msg) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Request", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// Request indicates an expected call of Request.
func (mr *MockInterfaceMockRecorder) Request(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Request", reflect.TypeOf((*MockInterface)(nil).Request), arg0)
}

// RequestResponse mocks base method.
func (m *MockInterface) RequestResponse(arg0, arg1 *dns.Msg) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RequestResponse", arg0, arg1)
	ret0, _ := ret[0].(string)
	return ret0
}

// RequestResponse indicates an expected call of RequestResponse.
func (mr *MockInterfaceMockRecorder) RequestResponse(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestResponse", reflect.TypeOf((*MockInterface)(nil).RequestResponse), arg0, arg1)
}

// Response mocks base method.
func (m *MockInterface) Response(arg0 *dns.Msg) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Response", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// Response indicates an expected call of Response.
func (mr *MockInterfaceMockRecorder) Response(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Response", reflect.TypeOf((*MockInterface)(nil).Response), arg0)
}
